<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>test on taka👨🏻‍💻</title>
    <link>https://takakd.github.io/tags/test/</link>
    <description>Recent content in test on taka👨🏻‍💻</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>&amp;copy; taka 2018</copyright>
    <lastBuildDate>Thu, 28 May 2020 04:36:46 +0900</lastBuildDate>
    
	<atom:link href="https://takakd.github.io/tags/test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>panicのテスト</title>
      <link>https://takakd.github.io/articles/20200528043646/</link>
      <pubDate>Thu, 28 May 2020 04:36:46 +0900</pubDate>
      
      <guid>https://takakd.github.io/articles/20200528043646/</guid>
      <description>Goでパニックが発生するかどうかのテストです。 // Testing if testFunc calls panic. // e.g. // IsTestCallPanic(func(){ // &amp;lt;place test target here.&amp;gt; // }) func IsTestCallPanic(testFunc func()) (ok bool) { defer func() { if err := recover(); err == nil { ok = false } }() ok = true testFunc() return } // Test for test. func TestIsTestCallPanic(t *testing.T) { isCalled := IsTestCallPanic(func() { var i interface{} if i == nil { panic(&amp;quot;Hi, panic.&amp;quot;) } }) if !isCalled { t.Errorf(&amp;quot;failed.&amp;quot;) } }</description>
    </item>
    
  </channel>
</rss>