<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Articles on taka👨🏻‍💻</title><link>https://takakd.github.io/articles/</link><description>Recent content in Articles on taka👨🏻‍💻</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://takakd.github.io/articles/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS SDK for Goを使ったユニットテスト</title><link>https://takakd.github.io/articles/20201129173130/</link><pubDate>Fri, 27 Nov 2020 17:31:30 +0900</pubDate><guid>https://takakd.github.io/articles/20201129173130/</guid><description>AWS SDK for Goの各AWSサービスのユニットテストのコードです。 単純にラップするするstructを作ってテストしています。 例えば、DynamoDBの場合は次の通り。 実</description></item><item><title>The REST API doesn't contain any methods (Service: AmazonApiGateway...</title><link>https://takakd.github.io/articles/20201116004243/</link><pubDate>Mon, 16 Nov 2020 00:42:43 +0900</pubDate><guid>https://takakd.github.io/articles/20201116004243/</guid><description>AWS CloudFormationでProxy統合したAPIをデプロイしようとして次のようなエラーがでました。 CREATE_FAILED AWS::ApiGateway::Deployment SomeDeployment The REST API doesn&amp;#39;t contain any methods (Service:BadRequestException; Request ID:xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx; Proxy: null) 原因は、Deployme</description></item><item><title>ブロックチェーンアプリケーション開発の教科書</title><link>https://takakd.github.io/articles/20201114200158/</link><pubDate>Sat, 14 Nov 2020 20:01:58 +0900</pubDate><guid>https://takakd.github.io/articles/20201114200158/</guid><description>ブロックチェーンアプリケーション開発でおすすめの書籍を教えていただいたので読みました。 ブロックチェーンアプリケーション開発の教科書（リフロー版） 教科書というタイ</description></item><item><title>API Gateway統合レスポンスのヘッダーのマッピングで固定値を設定</title><link>https://takakd.github.io/articles/20201102010035/</link><pubDate>Mon, 02 Nov 2020 01:00:36 +0900</pubDate><guid>https://takakd.github.io/articles/20201102010035/</guid><description>CloudFormation(.yaml)で、API Gatewayの統合レスポンスのヘッダーのマッピングで固定値を指定したい場合は、次のように書くとよい。 SomeMethod: Type: AWS::ApiGateway::Method</description></item><item><title>SlackのEventAPIのリトライコールを防ぐ - golang</title><link>https://takakd.github.io/articles/20201023052454/</link><pubDate>Fri, 23 Oct 2020 05:24:54 +0900</pubDate><guid>https://takakd.github.io/articles/20201023052454/</guid><description>エラーレスポンスを返す時でもリトライさせたくない場合は、ヘッダにX-Slack-No-Retryを指定する。 func handler(w http.ResponseWriter, r *http.Request) { // Process something... // Set &amp;#34;X-Slack-No-Retry: 1&amp;#34; if prevent retry. w.Header().Set(&amp;#34;X-Slack-No-Retry&amp;#34;, &amp;#34;1&amp;#34;) w.Header().Set(&amp;#34;Content-Type&amp;#34;, &amp;#34;application/json&amp;#34;) w.WriteHeader(http.StatusBadRequest) w.Write([]byte(&amp;#34;&amp;#34;)) } Reference https://api.slack.com/events-api#the-events-api__field-guide__error-handling__graceful-retries__turning-retries-off</description></item><item><title>generate gomockでエラーが出た - golang</title><link>https://takakd.github.io/articles/20201021052243/</link><pubDate>Wed, 21 Oct 2020 05:22:43 +0900</pubDate><guid>https://takakd.github.io/articles/20201021052243/</guid><description>gomockでエラー。とりあえず古いファイルを消して再実行すると解消できた。 % mockgen -source ./internal/app/usecase/xxx/repository.go -destination ./internal/app/usecase/xxx/repository_mock.go -package xxx -: found packages xxx (repository.go) and mock_updateproteinevent (repository_mock.go) in /Users/xxx/go/src/proteinreminder/internal/app/usecase/xxx 2020/10/21 04:21:56 Loading input failed: loading package failed # Delete % rm -rf ./internal/app/usecase/xxx/repository_mock.go # Run again and completed. % mockgen -source ./internal/app/usecase/xxx/repository.go -destination</description></item><item><title>golang-migrateのヘルパスクリプト - golang</title><link>https://takakd.github.io/articles/20201017051917/</link><pubDate>Sat, 17 Oct 2020 05:19:17 +0900</pubDate><guid>https://takakd.github.io/articles/20201017051917/</guid><description>.sql向けgolang-migrateのヘルパスクリプトです。 機能 .envからデータソースを読み込み ディレクトリ内のSQLファイルでマイグレート SQLのみ対応</description></item><item><title>AWS5資格の勉強ログ</title><link>https://takakd.github.io/articles/20200806023547/</link><pubDate>Thu, 06 Aug 2020 02:35:47 +0900</pubDate><guid>https://takakd.github.io/articles/20200806023547/</guid><description>勉強を始めた時に勉強法を色々調べたのですが、勉強ログ的なものは少ないように思ったので残しておきます。どなたかの参考になれば幸いです。 背景 勉強を始めた時のスペック</description></item><item><title>API Gateway + Lambda - golang</title><link>https://takakd.github.io/articles/20200705022238/</link><pubDate>Sun, 05 Jul 2020 02:22:39 +0900</pubDate><guid>https://takakd.github.io/articles/20200705022238/</guid><description>APIGateway + GoでLambdaのサンプルです。 仕様 エンドポイント: https://&amp;lt;API ID&amp;gt;.execute-api.ap-northeast-1.amazonaws.com/&amp;lt;stage&amp;gt;/&amp;lt;Resource&amp;gt; HTTPメソッド: GET パラメータ: { &amp;#34;text&amp;#34;: &amp;#34;string&amp;#34; } Lambdaハンドラ 引数をstructで定義。 package main import ( &amp;#34;context&amp;#34; &amp;#34;github.com/aws/aws-lambda-go/lambda&amp;#34;</description></item><item><title>makeコマンドに引数を渡す</title><link>https://takakd.github.io/articles/20200705022043/</link><pubDate>Sun, 05 Jul 2020 02:20:43 +0900</pubDate><guid>https://takakd.github.io/articles/20200705022043/</guid><description>渡せるんですね🥺 # Makefile DEFAULT=fuga test: @echo $(DEFAULT) # shell $ make # -&amp;gt; fuga $ make DEFAULT=hoge # -&amp;gt; hoge Reference https://stackoverflow.com/questions/2826029/passing-additional-variables-from-command-line-to-make</description></item><item><title>安全なtruncate string - golang</title><link>https://takakd.github.io/articles/20200628021817/</link><pubDate>Sun, 28 Jun 2020 02:18:17 +0900</pubDate><guid>https://takakd.github.io/articles/20200628021817/</guid><description>package main import ( &amp;#34;fmt&amp;#34; ) // Truncate string. func TruncateString(str string, length int) string { if length &amp;lt;= 0 { return &amp;#34;&amp;#34; } // This code cannot support Japanese // orgLen := len(str) // if orgLen &amp;lt;= length { // return str // } // return str[:length] // Support Japanese // Ref: Range loops https://blog.golang.org/strings truncated := &amp;#34;&amp;#34; count := 0 for _, char := range str { truncated += string(char) count++ if count &amp;gt;= length { break }</description></item><item><title>"omitempty"のメモ - golang</title><link>https://takakd.github.io/articles/20200625021433/</link><pubDate>Thu, 25 Jun 2020 02:14:34 +0900</pubDate><guid>https://takakd.github.io/articles/20200625021433/</guid><description>json.Marshal はomitemptyが値型stringに設定されていれば空文字を出力する。 フィールド自体不要な場合は、ポインタ型stringにするといい。 package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; ) type ValueSlice struct</description></item><item><title>ParseFormした値をstructに設定 - golang</title><link>https://takakd.github.io/articles/20200623021217/</link><pubDate>Tue, 23 Jun 2020 02:12:17 +0900</pubDate><guid>https://takakd.github.io/articles/20200623021217/</guid><description>// Set FormValues to struct func SetFormValueToStruct(values url.Values, structPtr interface{}) error { // Get the pointer of struct ptr := reflect.ValueOf(structPtr) // Get the value of struct value := ptr.Elem() // Set value to struct field valueType := value.Type() for i := 0; i &amp;lt; value.NumField(); i++ { jsonTag := valueType.Field(i).Tag.Get(&amp;#34;json&amp;#34;) if value.Field(i).CanSet() == false { return errors.New(&amp;#34;cannot set value to field&amp;#34;) } value.Field(i).Set(reflect.ValueOf(values.Get(jsonTag))) } return nil } // Example func ExampleSetFormValueToStruct() { // Form values formValues := url.Values{} formValues.Set(&amp;#34;test1&amp;#34;,</description></item><item><title>URLクエリ文字列を生成 - golang</title><link>https://takakd.github.io/articles/20200620021106/</link><pubDate>Sat, 20 Jun 2020 02:11:07 +0900</pubDate><guid>https://takakd.github.io/articles/20200620021106/</guid><description>params := url.Values{ &amp;#34;keyword&amp;#34;: {&amp;#34;some&amp;#34;}, } reqUrl := &amp;#34;https://yourendpoint.example.com?&amp;#34; + params.Encode() Reference https://golang.org/pkg/net/url/#URL.Query</description></item><item><title>ユニコードキャラクタをエスケープシーケンスに変換 - golang</title><link>https://takakd.github.io/articles/20200612020628/</link><pubDate>Fri, 12 Jun 2020 02:06:28 +0900</pubDate><guid>https://takakd.github.io/articles/20200612020628/</guid><description>json.Unmarshalしたデータに含まれる文字列のユニコードキャラクタをエスケープシーケンスに変換します。 // func convertJsonElement(data interface{}) interface{} { switch v := data.(type) { case map[string]interface{}: for ik, iv := range v { v[ik] = convertJsonElement(iv) }</description></item><item><title>パッケージ名で悩む - golang</title><link>https://takakd.github.io/articles/20200607143024/</link><pubDate>Sun, 07 Jun 2020 14:30:24 +0900</pubDate><guid>https://takakd.github.io/articles/20200607143024/</guid><description>プロジェクト内で、HTTPのユーティリティ関数をまとめるモジュールの命名に悩んでいました。 結果はproject-layoutの構成で、internalの下にht</description></item><item><title>npmモジュールのバージョンアップ - node</title><link>https://takakd.github.io/articles/20200606142418/</link><pubDate>Sat, 06 Jun 2020 14:24:18 +0900</pubDate><guid>https://takakd.github.io/articles/20200606142418/</guid><description>npm-checkを使うと対話式でアップデートできるのでわかりやすい。 # Install checking module globally. $ npm install -g npm-check # Run. # -u means &amp;#34;update&amp;#34; $ npm-check -u # Select all basically. ? Choose which packages to update. (Press &amp;lt;space&amp;gt; to select) Missing. You probably want these. ❯◯ normalize.css missing 8.0.1 https://necolas.github.io/normalize.css ◯</description></item><item><title>panicのテスト - golang</title><link>https://takakd.github.io/articles/20200528043646/</link><pubDate>Thu, 28 May 2020 04:36:46 +0900</pubDate><guid>https://takakd.github.io/articles/20200528043646/</guid><description>Goでパニックが発生するかどうかのテストです。 // Testing if testFunc calls panic. // e.g. // IsTestCallPanic(func(){ // &amp;lt;place test target here.&amp;gt; // }) func IsTestCallPanic(testFunc func()) (ok bool) { defer func() { if err := recover(); err == nil { ok = false } }() ok = true testFunc() return } // Test for test. func TestIsTestCallPanic(t *testing.T) { isCalled := IsTestCallPanic(func() {</description></item><item><title>Javadocの@see</title><link>https://takakd.github.io/articles/20200415000215/</link><pubDate>Wed, 15 Apr 2020 00:02:15 +0900</pubDate><guid>https://takakd.github.io/articles/20200415000215/</guid><description>こんなコメントを書いておりました。 class Hoge { /** * return greeting message string. * * @see https://docs.oracle.com/javase/8/docs/technotes/tools/windows/javadoc.html * @return greeting message string */ public String hello() { return &amp;#34;Hi&amp;#34;; } } @seeの使い方を間違ってます。 正しくは次のようにhtmlタグが必要。 /**</description></item><item><title>Interfaceポインタの型エラー - golang</title><link>https://takakd.github.io/articles/20200413235004/</link><pubDate>Mon, 13 Apr 2020 23:50:06 +0900</pubDate><guid>https://takakd.github.io/articles/20200413235004/</guid><description>Iocコンテナを作ろうとして次のようなコードを書くとエラーが出ました。 原因はinterfaceのポインタの型エラー。 // interface type IFace interface { hello() string } // concrete type type Concrete struct { } func NewConcrete() *Concrete { return</description></item><item><title>Reconstruction of a Tree</title><link>https://takakd.github.io/articles/20200307195400/</link><pubDate>Sat, 07 Mar 2020 20:01:02 +0900</pubDate><guid>https://takakd.github.io/articles/20200307195400/</guid><description>Reconstruction of a Tree Preorderだけだと構造が決まらないので、Inorderと合わせて木構造を決定する。 Inorderの値の中のPreorder値の左右が、木の左右に対</description></item><item><title>Insertion Sort</title><link>https://takakd.github.io/articles/20200306012400/</link><pubDate>Sat, 07 Mar 2020 01:24:02 +0900</pubDate><guid>https://takakd.github.io/articles/20200306012400/</guid><description>もう一回おさらいということで プログラミングコンテスト攻略のためのアルゴリズムとデータ構造を購入しました。 AIZU ONLINE JUDGEのInsertion Sortです。 package main import (</description></item><item><title>vimで複数行の文字列を1行のCSVにする</title><link>https://takakd.github.io/articles/20200218121730/</link><pubDate>Tue, 18 Feb 2020 12:17:30 +0900</pubDate><guid>https://takakd.github.io/articles/20200218121730/</guid><description>vimで複数行の文字列を1行のCSVにする方法です。 エディタで簡単なSQLのIN句を作成するときによく使います。 元のデータ 1134 1373 3985 4588 Ctrl + Vで先頭に'を入れる。 '1134 '1373</description></item><item><title>error table [name] has no column [column]</title><link>https://takakd.github.io/articles/20200131021820/</link><pubDate>Fri, 31 Jan 2020 02:18:21 +0900</pubDate><guid>https://takakd.github.io/articles/20200131021820/</guid><description>GoでsqliteにデータをInsertしようとしてエラー。 $ error table Balance has no column named price Insertしているコードを見ても問題はない。 カラムを確認すると…… 2個目のカラム</description></item><item><title>シェルでzip圧縮</title><link>https://takakd.github.io/articles/20200119091945/</link><pubDate>Sun, 19 Jan 2020 09:19:45 +0900</pubDate><guid>https://takakd.github.io/articles/20200119091945/</guid><description>shellでzip圧縮するコマンドです。 環境 Mac 10.14.6 GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin18) zip # -------------------------------------- # filename.txtをsth.zipに圧縮 # -Xで.DS_Storeなどの特殊ファイルを無</description></item><item><title>階乗の桁数を出力するシェルコマンド</title><link>https://takakd.github.io/articles/20191227203724/</link><pubDate>Fri, 27 Dec 2019 20:37:24 +0900</pubDate><guid>https://takakd.github.io/articles/20191227203724/</guid><description>2のX乗の桁数を出力するコマンドです。 # 1. arithmetic expressionsで計算 # 2. wcで結果の桁数をカウント $ echo -n $((2 ** 32)) | wc -c</description></item><item><title>添付ファイルがあるオブジェクト名を取得</title><link>https://takakd.github.io/articles/20191225204407/</link><pubDate>Wed, 25 Dec 2019 20:44:07 +0900</pubDate><guid>https://takakd.github.io/articles/20191225204407/</guid><description>Salesforceのオブジェクトの内、添付ファイルがついているオブジェクト名を取得するコードです。 開発者コンソールの[Open Execute Anonymous Window]から実行できま</description></item><item><title>Netlify + HugoでTOCSS: failedが出た時の対応</title><link>https://takakd.github.io/articles/20190817222000/</link><pubDate>Sat, 17 Aug 2019 22:40:00 +0900</pubDate><guid>https://takakd.github.io/articles/20190817222000/</guid><description>久しぶりにブログ更新するぞとGitHubにpushするとnetlifyのビルドエラーが発生。 その解決方法です。 対応 Netlifyの[Deploy Settings</description></item><item><title>Python3 + virtualenv</title><link>https://takakd.github.io/articles/20190419001300/</link><pubDate>Fri, 19 Apr 2019 00:13:00 +0900</pubDate><guid>https://takakd.github.io/articles/20190419001300/</guid><description>MacにPython3とvirtualenvを設定する手順です。 環境 macOS 10.14.4 インストール 1. Python3をインストール https://www.python.org/ からMac OS X用のインストーラをダウンロード</description></item><item><title>MTVarでsetvarを使うときの注意点</title><link>https://takakd.github.io/articles/20190302133900/</link><pubDate>Sat, 02 Mar 2019 13:39:00 +0900</pubDate><guid>https://takakd.github.io/articles/20190302133900/</guid><description>MovableTypeのテンプレートタグMTVarで、setvarモディファイアを使ったときに詰まったメモです。 環境 MovableType 6.3.3 MTAppjQuery 1.11.3（remove_hostモ</description></item><item><title>ZaimのAPIで履歴を取得</title><link>https://takakd.github.io/articles/20181224142205/</link><pubDate>Mon, 24 Dec 2018 14:22:06 +0900</pubDate><guid>https://takakd.github.io/articles/20181224142205/</guid><description>普段、家計簿をZaimで管理しています。 時々、「そういえば今月は、食費をどの程度使っているかな？」と確認するのですが、そのたびにスマホでアプリ起動というのがどう</description></item><item><title>Heroku RedisをHerokuAppで複数利用</title><link>https://takakd.github.io/articles/20181018234800/</link><pubDate>Thu, 18 Oct 2018 14:00:00 +0900</pubDate><guid>https://takakd.github.io/articles/20181018234800/</guid><description>Laravelで実装したWebアプリで、Heroku Redisを複数利用する時に悩んだ話です。 Heroku Redisを1Appに複数設置すると、2個目以降の接続情報の環境</description></item><item><title>SalesForce CLIでApexを取得</title><link>https://takakd.github.io/articles/20181015013500/</link><pubDate>Wed, 17 Oct 2018 01:08:00 +0900</pubDate><guid>https://takakd.github.io/articles/20181015013500/</guid><description>MavensMateがサポート終了になった後も、Apexを取得するために利用していたのですが、ついに起動しなくなりました。 エラーは&amp;quot;A JavaScript error occurred in the main process&amp;quot; 試</description></item><item><title>HTML FormでS3にPOST</title><link>https://takakd.github.io/articles/20180224125248/</link><pubDate>Sat, 24 Feb 2018 12:52:48 +0900</pubDate><guid>https://takakd.github.io/articles/20180224125248/</guid><description>AWSのリファレンスを参考に、FormでS3バケットへのPOSTを試してみました。 準備 FormでS3にPOSTするためには、各フィールドに送信するファイルに合わ</description></item><item><title>AWSでVPC + 踏み台EC2 + NAT Gatewayの設定</title><link>https://takakd.github.io/articles/20180209233744/</link><pubDate>Fri, 09 Feb 2018 23:37:44 +0900</pubDate><guid>https://takakd.github.io/articles/20180209233744/</guid><description>VPCの勉強のため、よくある構成で設定を試しました。 構成 VPC test-vpc1(172.31.0.0/16) Private Subnet test-subnet-private(172.31.0.0/24) Public subnet test-subnet-public(172.31.1.0/24) 踏み台EC2 インスタンスタイプ: t2.micro セキュリティグループ タイプ ポート ソース or 送信先 インバウ</description></item><item><title>jQueryでDOM要素の検索速度を比較</title><link>https://takakd.github.io/articles/20171217011236/</link><pubDate>Sat, 13 Jan 2018 00:44:25 +0900</pubDate><guid>https://takakd.github.io/articles/20171217011236/</guid><description>jQueryでDOM要素を検索するとき、HTML構造にあわせてセレクタやjQueryメソッドを使用します。 セレクタの記述パターンはいくつかありますが、それぞれど</description></item><item><title>IntelliJのTypeScriptで.jsファイルのCan't resolveを解消</title><link>https://takakd.github.io/articles/20171207092227/</link><pubDate>Thu, 07 Dec 2017 09:22:27 +0900</pubDate><guid>https://takakd.github.io/articles/20171207092227/</guid><description>WebStormのAngularプロジェクトをIntelliJに移動した時、Javascriptをimportしているところで&amp;quot;Can&amp;rsquo;t</description></item><item><title>Apache2.4で一部のディレクトリのみBasic認証</title><link>https://takakd.github.io/articles/20171124023540/</link><pubDate>Fri, 24 Nov 2017 02:35:40 +0900</pubDate><guid>https://takakd.github.io/articles/20171124023540/</guid><description>一部のディレクトリのみBasic認証したいケースがあり、.htaccessで設定しました。 前提 Apache 2.4 .htaccess使用可能 .htaccess 次の通り。 &amp;lt;Files ~ &amp;#34;^\.(htpasswd|htaccess)$&amp;#34;&amp;gt; Require all denied &amp;lt;/Files&amp;gt; &amp;lt;Files ~ &amp;#34;^(?!\.htpasswd|\.htaccess).*&amp;#34;&amp;gt; Require all</description></item><item><title>HugoでJSONを出力</title><link>https://takakd.github.io/articles/20171107023559/</link><pubDate>Tue, 07 Nov 2017 02:35:59 +0900</pubDate><guid>https://takakd.github.io/articles/20171107023559/</guid><description>サイトの記事データをJSONで出力したい。手作業は大変。CMSを設置するのも億劫。 ということで、Hugoで出力するようにしました。 サンプルコード 前提 macOS Sierra Home</description></item><item><title>AWS CLIのインストール</title><link>https://takakd.github.io/articles/20171025023301/</link><pubDate>Wed, 25 Oct 2017 02:33:01 +0900</pubDate><guid>https://takakd.github.io/articles/20171025023301/</guid><description>AWSマネジメントコンソールを使う機会が増えてきました。 軽微な確認作業で毎度ログインするのが手間なため、AWS CLIを使って簡単にできないかなとまずはインストー</description></item></channel></rss>